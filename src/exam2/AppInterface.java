package exam2;

import data.DbContext;
import java.awt.Color;
import java.awt.Font;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.time.Year;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Date;
import java.util.List;
import java.util.Locale;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import models.Car;
import models.Owner;
import javax.swing.JOptionPane;

/**
 *
 * @author user
 */
public class AppInterface extends javax.swing.JFrame {

  /**
   * Creates new form AppInterface
   */
  public AppInterface() {
    initComponents();

    System.out.println("Welcome");
    affichage();
  }

  private int ins_ok;
  private int ownerId = -1;
  DbContext db = new DbContext();

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        bloc_proprietaire = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jfCNI = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jfFirstName = new javax.swing.JTextField();
        jfGenderMale = new javax.swing.JRadioButton();
        jfGenderFemale = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jfLastName = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jfPhoneNumber = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jfDoB = new com.toedter.calendar.JDateChooser();
        bloc_proprietaire1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jfMarque = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jfModel = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jfTransmission = new javax.swing.JSpinner();
        jfYear = new com.toedter.calendar.JYearChooser();
        jLabel10 = new javax.swing.JLabel();
        jfMatricule = new javax.swing.JTextField();
        jfValidate = new javax.swing.JButton();
        jfCancel = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jfTables = new javax.swing.JTable();
        jComboBox1 = new javax.swing.JComboBox<>();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("SAMA AUTO");

        bloc_proprietaire.setBorder(javax.swing.BorderFactory.createTitledBorder("Owner"));

        jLabel1.setText("CNI");

        jfCNI.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                jfCNIFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                jfCNIFocusLost(evt);
            }
        });

        jLabel2.setText("First Name");

        jfFirstName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfFirstNameActionPerformed(evt);
            }
        });

        buttonGroup1.add(jfGenderMale);
        jfGenderMale.setSelected(true);
        jfGenderMale.setText("Male");
        jfGenderMale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfGenderMaleActionPerformed(evt);
            }
        });

        buttonGroup1.add(jfGenderFemale);
        jfGenderFemale.setText("Female");
        jfGenderFemale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfGenderFemaleActionPerformed(evt);
            }
        });

        jLabel3.setText("Last Name");

        jLabel4.setText("Phone Number");

        jLabel5.setText("DoB");

        jfDoB.setToolTipText("");
        jfDoB.setDateFormatString("yyyy-MM-dd");
        jfDoB.setMinSelectableDate(new java.util.Date(-62135765899000L));

        javax.swing.GroupLayout bloc_proprietaireLayout = new javax.swing.GroupLayout(bloc_proprietaire);
        bloc_proprietaire.setLayout(bloc_proprietaireLayout);
        bloc_proprietaireLayout.setHorizontalGroup(
            bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bloc_proprietaireLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addGap(46, 46, 46)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(bloc_proprietaireLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jfGenderMale)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jfGenderFemale))
                    .addComponent(jfCNI)
                    .addComponent(jfFirstName)
                    .addComponent(jfLastName)
                    .addComponent(jfPhoneNumber)
                    .addComponent(jfDoB, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        bloc_proprietaireLayout.setVerticalGroup(
            bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bloc_proprietaireLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jfGenderMale)
                    .addComponent(jfGenderFemale, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfCNI, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfFirstName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfPhoneNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaireLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jfDoB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        bloc_proprietaire1.setBorder(javax.swing.BorderFactory.createTitledBorder("Car"));

        jLabel6.setText("Marque");

        jLabel7.setText("Modele");

        jfModel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfModelActionPerformed(evt);
            }
        });

        jLabel8.setText("Transmission");

        jLabel9.setText("Year");

        jLabel10.setText("Matricule");

        javax.swing.GroupLayout bloc_proprietaire1Layout = new javax.swing.GroupLayout(bloc_proprietaire1);
        bloc_proprietaire1.setLayout(bloc_proprietaire1Layout);
        bloc_proprietaire1Layout.setHorizontalGroup(
            bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(bloc_proprietaire1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jfMarque, javax.swing.GroupLayout.DEFAULT_SIZE, 127, Short.MAX_VALUE)
                    .addComponent(jfModel)
                    .addComponent(jfTransmission)
                    .addComponent(jfYear, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jfMatricule))
                .addGap(16, 16, 16))
        );
        bloc_proprietaire1Layout.setVerticalGroup(
            bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, bloc_proprietaire1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(jfMatricule, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfMarque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfModel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jfTransmission, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(bloc_proprietaire1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel9)
                    .addComponent(jfYear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        jfValidate.setText("Validate");
        jfValidate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfValidateActionPerformed(evt);
            }
        });

        jfCancel.setText("Cancel");
        jfCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jfCancelActionPerformed(evt);
            }
        });

        jfTables.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "CNI", "MATRICULE", "FIRST_NAME", "LAST_NAME", "PHONE", "BRAND", "YEAR"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jfTables);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jfCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jfValidate, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bloc_proprietaire1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(bloc_proprietaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 526, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(52, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addComponent(bloc_proprietaire, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bloc_proprietaire1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(44, 44, 44)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jfValidate, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jfCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(42, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(63, 63, 63))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void jfGenderFemaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfGenderFemaleActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jfGenderFemaleActionPerformed

  private void jfGenderMaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfGenderMaleActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jfGenderMaleActionPerformed

  private void jfFirstNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfFirstNameActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jfFirstNameActionPerformed

  private void jfModelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfModelActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_jfModelActionPerformed

  private void jfCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfCancelActionPerformed
    // TODO add your handling code here:
    System.out.println("Cancel..");
    cancel_btn();
  }//GEN-LAST:event_jfCancelActionPerformed

  private void jfValidateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jfValidateActionPerformed
    // TODO add your handling code here:
    form_validator();
    // JOptionPane.showMessageDialog(this, "Good!! Inserted");
    // JOptionPane.showMessageDialog(this, row > 0 ? "insert" : "not insert");
  }//GEN-LAST:event_jfValidateActionPerformed

    private void jfCNIFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfCNIFocusLost
        
        // jfCNI.setText("02787-147-7A");
        
        
        // if exist id, set value on form
        if(!jfCNI.getText().isEmpty()){
            String __cni = jfCNI.getText();
            //db.queryPrepare(String tableName, String[] keys, String[] symbols, String[] values, int skip_value);
            
            String tableName = "auto_owners";
            String[] keys = {"CNI"};
            String[] symbols = {"="};
            String[] values = {__cni};
            try {
                ResultSet result = db.queryPrepare(tableName, keys, symbols, values, 0);
                  
                
                
                Vector row = new Vector();

                int columnCount = db.getColumnsFromTable(tableName).length;
                
                while (result.next()) {
                    row = new Vector(columnCount);
                    for (int i = 1; i <= columnCount; i++) {
                        row.add(result.getString(i));
                    }
                    break;
                }
                
                
                if (row.isEmpty()) {
                    return;
                }
                
                jfCNI.setText((String) row.get(4));
                jfFirstName.setText((String) row.get(1));
                jfLastName.setText((String) row.get(2));
                jfPhoneNumber.setText((String) row.get(3));
                //jfDoB.setDate((Date) row.get(5));
                jfGenderMale.setSelected((boolean) row.get(6));
                // (row.get(6));
                
                System.out.println("");
                
            } catch (SQLException ex) {
                Logger.getLogger(AppInterface.class.getName()).log(Level.SEVERE, null, ex);
            }
            System.out.println(jfCNI.getText() + "  <--- aaaaa");
        }
    }//GEN-LAST:event_jfCNIFocusLost

    private void jfCNIFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jfCNIFocusGained
        jfCNI.setText("");
    }//GEN-LAST:event_jfCNIFocusGained

  private void cancel_btn() {
    jfCNI.setText("");
    jfFirstName.setText("");
    jfLastName.setText("");
    jfPhoneNumber.setText("");
    jfDoB.setDate(null);

    jfMarque.setText("");
    jfModel.setText("");
    jfTransmission.setValue(0);
    jfYear.setValue(Year.now().getValue()); // set current year

    // default gender Male
    jfGenderMale.setSelected(true);
  }

  private void form_validator() {
    try {
        // validation des champs
        if(input_validate() == false){
            JOptionPane.showMessageDialog(this, "/!\\ Tous les champs sont obligatoires");
            return;
        }
        
        // owner
        String _cni = jfCNI.getText();
        String _firstname = jfFirstName.getText();
        String _lastname = jfLastName.getText();
        String _phone = jfPhoneNumber.getText();
        Date _dob = jfDoB.getDate();
        // default gender Male
        int _gender = jfGenderMale.isSelected() ? 1 : 0;
      
        // car
        String _matricule = jfMatricule.getText();
        String _marque = jfMarque.getText();
        String _model = jfModel.getText();
        int _transmission = (int) jfTransmission.getValue();
        int _year = jfYear.getValue(); // set current year

        try {
            // Formatage de la date en chaîne
            DateFormat outputDateFormat = new SimpleDateFormat("yy-MM-dd");
            String dateStr = outputDateFormat.format(_dob);

            String[] parts = dateStr.split("-");
            int o_year = Integer.parseInt(parts[0]);
            int o_month = Integer.parseInt(parts[1]);
            int o_day = Integer.parseInt(parts[2]);

            Date dob = new Date(o_year, o_month, o_day);
            System.out.println(dob);
            Owner own = new Owner();
            own.setFirstName(_firstname);
            own.setLastName(_lastname);
            own.setPhone(_phone);
            own.setCni(_cni);
            own.setDob(dob);
            own.setGender(_gender);

            String[] cols = db.getColumnsFromTable("auto_owners");
            Object[] owner_vals = owner_values_object(own);

            ownerId = db.insertIntoTable("auto_owners", cols, owner_vals, 1);

            affichage();
        } catch (SQLException err) {
            System.out.println(err.getMessage());
            err.getStackTrace();
        }

        //
        if (ownerId == -1) return;

        try {
            System.out.println("");
            // String matricule, String marque, String model, int transmission, int annee, int ownerId
            Car car = new Car(_marque, _model, _transmission, _year, ownerId);
            System.out.println(car);
            String[] cols = db.getColumnsFromTable("auto_cars");
            Object[] car_vals = car_values_object(car);

            db.insertIntoTable("auto_cars", cols, car_vals, 1);
          
            affichage();
          
        } catch (SQLException err) {
            System.out.println(err.getMessage());
            err.getStackTrace();
        }
      
    } catch (Exception ex) {
        System.out.println("Les champs sont obligatoires");
        JOptionPane.showMessageDialog(this, "/!\\ Tous les champs sont obligatoires");
    }
    
  }
  
  public boolean input_validate(){
    // owner
    String _cni = jfCNI.getText();
    String _firstname = jfFirstName.getText();
    String _lastname = jfLastName.getText();
    String _phone = jfPhoneNumber.getText();
    
    Date _dob = jfDoB.getDate();

    // car
    String _matricule = jfMatricule.getText();
    String _marque = jfMarque.getText();
    String _model = jfModel.getText();
    //int _transmission = (int) jfTransmission.getValue();
    return _dob != null && !_cni.trim().isEmpty() && !_firstname.trim().isEmpty() && !_lastname.trim().isEmpty() && !_phone.trim().isEmpty() && !_matricule.trim().isEmpty() && !_marque.trim().isEmpty() && !_model.trim().isEmpty();
  }

  private Object[] car_values_object(Car car) {
    List<Object> carList = new ArrayList<>();

    carList.add(car.getMatricule());

    carList.add(car.getModel());
    carList.add(car.getMarque());
    carList.add(car.getTransmission());
    carList.add(car.getAnnee());
    carList.add(car.getOwnerId());

    Object[] cars = carList.toArray();

    return cars;
  }

  private Object[] owner_values_object(Owner own) {
    List<Object> carList = new ArrayList<>();

    carList.add(own.getFirstName());
    carList.add(own.getLastName());
    carList.add(own.getPhone());
    carList.add(own.getCni());
    carList.add(own.getDob());
    carList.add(own.getGender());

    Object[] owners = carList.toArray();

    return owners;
  }

  private void affichage() {
    try {
      String sql = "SELECT CNI,MATRICULE,FIRST_NAME,LAST_NAME,PHONE,MARQUE,ANNEE FROM auto_owners, auto_cars WHERE auto_owners.OWNER_ID=auto_cars.OWNER_ID";
      ResultSet rs = db.query(sql);
      db.displayTable(rs, jfTables);
    } catch (Exception ex) {
      Logger
        .getLogger(AppInterface.class.getName())
        .log(Level.SEVERE, null, ex);
    }
  }

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java
        .util.logging.Logger.getLogger(AppInterface.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java
        .util.logging.Logger.getLogger(AppInterface.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java
        .util.logging.Logger.getLogger(AppInterface.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java
        .util.logging.Logger.getLogger(AppInterface.class.getName())
        .log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(
      new Runnable() {

        public void run() {
          new AppInterface().setVisible(true);
        }
      }
    );
  }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bloc_proprietaire;
    private javax.swing.JPanel bloc_proprietaire1;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField jfCNI;
    private javax.swing.JButton jfCancel;
    private com.toedter.calendar.JDateChooser jfDoB;
    private javax.swing.JTextField jfFirstName;
    private javax.swing.JRadioButton jfGenderFemale;
    private javax.swing.JRadioButton jfGenderMale;
    private javax.swing.JTextField jfLastName;
    private javax.swing.JTextField jfMarque;
    private javax.swing.JTextField jfMatricule;
    private javax.swing.JTextField jfModel;
    private javax.swing.JTextField jfPhoneNumber;
    private javax.swing.JTable jfTables;
    private javax.swing.JSpinner jfTransmission;
    private javax.swing.JButton jfValidate;
    private com.toedter.calendar.JYearChooser jfYear;
    // End of variables declaration//GEN-END:variables
}
